{"version":3,"sources":["components/Tabs/Hotkeys/Hotkeys.module.css","components/Snake/Snake.module.css","components/Footer/Footer.module.css","containers/App.module.css","components/Controls/Controls.module.css","components/MusicPlayer/MusicPlayer.module.css","components/Fruit/Fruit.module.css","constants/constants.js","components/Snake/Snake.js","components/Fruit/Fruit.js","components/Tabs/Hotkeys/Hotkeys.js","context/Context.js","components/Tabs/VolumeSlider/VolumeSlider.js","components/Tabs/Tabs.js","components/Popup/Popup.js","components/Controls/Controls.js","assets/bite.mp3","components/MusicPlayer/MusicPlayer.js","assets/rs_school_js.svg","components/Footer/Footer.js","containers/App.js","reportWebVitals.js","index.js"],"names":["module","exports","constants","SIZE","SPEED","SPEED_FAST","SPEED_STEP","MAX_POSITION","MIN_POSITION","TOP","RIGHT","LEFT","BOTTOM","SPACE_BETWEEN_SNAKE_PIECES","STARTING_SNAKE_POSITION","FRUIT_POSITION","Math","floor","random","Snake","props","snakePosition","map","snakePiece","index","arr","StartPositionStyles","left","top","width","size","height","transform","direction","length","className","classes","snake__piece","snake__head","isGameOver","snake__head_dead","style","Fruit","fruitPositionStyle","fruitPosition","fruit","Hotkeys","list","key","Context","React","createContext","bestScore","audioVolumeHandler","audioVolume","lastScores","useStyles","makeStyles","root","ContinuousSlider","audioVolumeContext","useContext","useState","parseInt","value","setValue","Typography","id","gutterBottom","Grid","container","spacing","item","xs","Slider","onChange","event","newValue","localStorage","setItem","aria-labelledby","TabPanel","children","other","role","hidden","Box","div","a11yProps","theme","flexGrow","backgroundColor","palette","background","paper","ScrollableTabsButtonAuto","scoreContext","reversedScores","reverse","AppBar","position","color","Tabs","indicatorColor","textColor","variant","scrollButtons","aria-label","Tab","label","score","paddingTop","getModalStyle","border","boxShadow","shadows","padding","SimpleModal","modalStyle","open","setOpen","body","Button","type","onClick","target","blur","Modal","onClose","aria-describedby","Controls","volumeIcon","isVolume","musicIcon","isMusic","controls__wrapper","controls__score","clicked","volumeToggle","isFull","musicToggle","goFull","MusicPlayer","music","display","title","src","frameBorder","allow","allowFullScreen","music__player","Footer","footer","footer__link","href","footer__logo","logo","alt","App","state","speed","isGamePause","audio","Audio","biteSound","setState","prevState","moveSnake","clearInterval","intervalId","newIntervalId","setInterval","snakeCoordinates","headCoordinates","push","shift","checkWallSmash","checkSnakeBiteItSelf","pop","forEach","snakePieces","checkEatFruit","fruitCoordinates","snakeGrow","currentTime","volume","play","unshift","isGamePauseToggle","lastScoresCopy","JSON","stringify","startGameHandler","volumeToggleHandler","newVolume","musicToggleHandler","window","addEventListener","this","keydownHandler","bind","updateScore","getItem","updateVolume","updateLastScores","parse","callback","keyCode","setDirection","app","enabled","Provider","app__field","app__fullScreen","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.34211d29.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Hotkeys_list__Mgljn\",\"key\":\"Hotkeys_key__3R8tq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"snake__piece\":\"Snake_snake__piece__1ePKK\",\"snake__head\":\"Snake_snake__head__Ibk3i\",\"snake__head_dead\":\"Snake_snake__head_dead__31w_8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"Footer_footer__3qYAP\",\"footer__logo\":\"Footer_footer__logo__kLW5G\",\"footer__link\":\"Footer_footer__link__2pwZp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__1fB2b\",\"app__field\":\"App_app__field__1jCqw\",\"app__fullScreen\":\"App_app__fullScreen__McoD_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"controls__wrapper\":\"Controls_controls__wrapper__3j6Y5\",\"controls__score\":\"Controls_controls__score__2euP4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"music\":\"MusicPlayer_music__1vIjP\",\"music__player\":\"MusicPlayer_music__player__1Dx2m\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"fruit\":\"Fruit_fruit__32-aM\"};","const constants = {\r\n  SIZE: 4,\r\n  SPEED: 150,\r\n  SPEED_FAST: 50,\r\n  SPEED_STEP: 10,\r\n  MAX_POSITION: 98,\r\n  MIN_POSITION: 1,\r\n  TOP: 'TOP',\r\n  RIGHT: 'RIGHT',\r\n  LEFT: 'LEFT',\r\n  BOTTOM: 'BOTTOM',\r\n  SPACE_BETWEEN_SNAKE_PIECES: 2,\r\n  STARTING_SNAKE_POSITION: [\r\n    [0, 0],\r\n    [2, 0],\r\n    [4, 0],\r\n  ],\r\n  FRUIT_POSITION: () => [\r\n    Math.floor(\r\n      (Math.random() * constants.MAX_POSITION + constants.MIN_POSITION) /\r\n        constants.SIZE,\r\n    ) * constants.SIZE,\r\n    Math.floor(\r\n      (Math.random() * constants.MAX_POSITION + constants.MIN_POSITION) /\r\n        constants.SIZE,\r\n    ) * constants.SIZE,\r\n  ],\r\n};\r\n\r\nexport default constants;\r\n","import React from 'react';\r\nimport classes from './Snake.module.css';\r\nimport constants from '../../constants/constants';\r\n\r\nconst Snake = (props) => {\r\n  return (\r\n    <div>\r\n      {props.snakePosition.map((snakePiece, index, arr) => {\r\n        const StartPositionStyles = {\r\n          left: `${snakePiece[0]}%`,\r\n          top: `${snakePiece[1]}%`,\r\n          width: `${props.size}%`,\r\n          height: `${props.size}%`,\r\n          transform: `${\r\n            props.direction === constants.LEFT\r\n              ? 'rotate(90deg)'\r\n              : props.direction === constants.TOP\r\n              ? 'rotate(180deg)'\r\n              : props.direction === constants.RIGHT\r\n              ? 'rotate(270deg)'\r\n              : 'rotate(0deg)'\r\n          }`,\r\n        };\r\n        return index === arr.length - 1 ? (\r\n          <div\r\n            key={index}\r\n            className={`${classes.snake__piece} ${classes.snake__head} ${\r\n              props.isGameOver ? classes.snake__head_dead : ''\r\n            }`}\r\n            style={StartPositionStyles}\r\n          ></div>\r\n        ) : (\r\n          <div\r\n            key={index}\r\n            className={classes.snake__piece}\r\n            style={StartPositionStyles}\r\n          ></div>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Snake;\r\n","import React from 'react';\r\nimport classes from './Fruit.module.css';\r\n\r\nconst Fruit = (props) => {\r\n  const fruitPositionStyle = {\r\n    left: `${props.fruitPosition[0]}%`,\r\n    top: `${props.fruitPosition[1]}%`,\r\n    width: `${props.size}%`,\r\n    height: `${props.size}%`,\r\n  };\r\n  return <div className={classes.fruit} style={fruitPositionStyle}></div>;\r\n};\r\n\r\nexport default Fruit;\r\n","import React from 'react';\r\nimport classes from './Hotkeys.module.css';\r\n\r\nconst Hotkeys = () => {\r\n  return (\r\n    <ul className={classes.list}>\r\n      <li>\r\n        <span className={classes.key}>LEFT:</span> left arrow \\ A\r\n      </li>\r\n      <li>\r\n        <span className={classes.key}>UP:</span> up arrow \\ W\r\n      </li>\r\n      <li>\r\n        <span className={classes.key}>RIGHT:</span> right arrow \\ D\r\n      </li>\r\n      <li>\r\n        <span className={classes.key}>DOWN:</span> down arrow \\ S\r\n      </li>\r\n      <li>\r\n        <span className={classes.key}>PAUSE:</span> space\r\n      </li>\r\n      <li>\r\n        <span className={classes.key}>TURBO:</span> hold move button\r\n      </li>\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default Hotkeys;\r\n","import React from 'react';\r\n\r\nconst Context = React.createContext({\r\n  bestScore: 0,\r\n  audioVolumeHandler: () => {},\r\n  audioVolume: 0,\r\n  lastScores: 0,\r\n});\r\n\r\nexport default Context;\r\n","import React, { useContext } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport VolumeDown from '@material-ui/icons/VolumeDown';\r\nimport VolumeUp from '@material-ui/icons/VolumeUp';\r\nimport Context from '../../../context/Context';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: 200,\r\n  },\r\n});\r\n\r\nexport default function ContinuousSlider() {\r\n  const classes = useStyles();\r\n  const audioVolumeContext = useContext(Context);\r\n\r\n  const [value, setValue] = React.useState(\r\n    parseInt(audioVolumeContext.audioVolume),\r\n  );\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n    audioVolumeContext.audioVolumeHandler(newValue);\r\n    localStorage.setItem('audioVolume', newValue);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Typography id=\"continuous-slider\" gutterBottom>\r\n        Volume\r\n      </Typography>\r\n      <Grid container spacing={2}>\r\n        <Grid item>\r\n          <VolumeDown />\r\n        </Grid>\r\n        <Grid item xs>\r\n          <Slider\r\n            value={value}\r\n            onChange={handleChange}\r\n            aria-labelledby=\"continuous-slider\"\r\n          />\r\n        </Grid>\r\n        <Grid item>\r\n          <VolumeUp />\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useContext } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Box from '@material-ui/core/Box';\r\nimport Hotkeys from './Hotkeys/Hotkeys';\r\nimport Context from '../../context/Context';\r\nimport ContinuousSlider from './VolumeSlider/VolumeSlider';\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`scrollable-auto-tabpanel-${index}`}\r\n      aria-labelledby={`scrollable-auto-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && (\r\n        <Box div={3}>\r\n          <div>{children}</div>\r\n        </Box>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.any.isRequired,\r\n  value: PropTypes.any.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `scrollable-auto-tab-${index}`,\r\n    'aria-controls': `scrollable-auto-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    width: '100%',\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n}));\r\n\r\nexport default function ScrollableTabsButtonAuto(props) {\r\n  const classes = useStyles();\r\n  const [value, setValue] = React.useState(0);\r\n  const scoreContext = useContext(Context);\r\n  const reversedScores = scoreContext.lastScores.map((item) => item).reverse();\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\" color=\"default\">\r\n        <Tabs\r\n          value={value}\r\n          onChange={handleChange}\r\n          indicatorColor=\"primary\"\r\n          textColor=\"primary\"\r\n          variant=\"scrollable\"\r\n          scrollButtons=\"auto\"\r\n          aria-label=\"scrollable auto tabs example\"\r\n        >\r\n          <Tab label=\"Hot Keys\" {...a11yProps(0)} />\r\n          <Tab label=\"Score Statistic\" {...a11yProps(1)} />\r\n          <Tab label=\"Settings\" {...a11yProps(2)} />\r\n        </Tabs>\r\n      </AppBar>\r\n      <TabPanel value={value} index={0}>\r\n        <Hotkeys />\r\n      </TabPanel>\r\n      <TabPanel value={value} index={1}>\r\n        <h3>Best Score: {scoreContext.bestScore}</h3>\r\n        <h3>10 Last Scores:</h3>\r\n        <ul>\r\n          {reversedScores.map((score, index) => {\r\n            return (\r\n              <li key={index}>\r\n                {index + 1}\r\n                {')'} {score}\r\n              </li>\r\n            );\r\n          })}\r\n        </ul>\r\n      </TabPanel>\r\n      <TabPanel value={value} index={2}>\r\n        <div style={{ paddingTop: '20px' }}>\r\n          <ContinuousSlider />\r\n        </div>\r\n      </TabPanel>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport Button from '@material-ui/core/Button';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport ScrollableTabsButtonAuto from '../Tabs/Tabs';\r\n\r\nfunction getModalStyle() {\r\n  const top = 50;\r\n  const left = 50;\r\n\r\n  return {\r\n    top: `${top}%`,\r\n    left: `${left}%`,\r\n    transform: `translate(-${top}%, -${left}%)`,\r\n  };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    position: 'absolute',\r\n    width: 400,\r\n    backgroundColor: theme.palette.background.paper,\r\n    border: '2px solid #1166aa',\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(2, 4, 3),\r\n  },\r\n}));\r\n\r\nexport default function SimpleModal(props) {\r\n  const classes = useStyles();\r\n  const [modalStyle] = React.useState(getModalStyle);\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleOpen = (event) => {\r\n    event.target.blur();\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const body = (\r\n    <div style={modalStyle} className={classes.paper}>\r\n      <ScrollableTabsButtonAuto />\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      <Button\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        type=\"button\"\r\n        onClick={handleOpen}\r\n      >\r\n        <SettingsIcon style={{ color: 'white' }}></SettingsIcon>\r\n      </Button>\r\n      <Modal\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"simple-modal-title\"\r\n        aria-describedby=\"simple-modal-description\"\r\n      >\r\n        {body}\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport classes from './Controls.module.css';\r\nimport Button from '@material-ui/core/Button';\r\nimport VolumeUpIcon from '@material-ui/icons/VolumeUp';\r\nimport VolumeOffIcon from '@material-ui/icons/VolumeOff';\r\nimport YouTubeIcon from '@material-ui/icons/YouTube';\r\nimport SubscriptionsIcon from '@material-ui/icons/Subscriptions';\r\nimport Popup from '../Popup/Popup';\r\nimport FullscreenIcon from '@material-ui/icons/Fullscreen';\r\n\r\nconst Controls = (props) => {\r\n  const volumeIcon = props.isVolume ? (\r\n    <VolumeUpIcon style={{ color: 'white' }}></VolumeUpIcon>\r\n  ) : (\r\n    <VolumeOffIcon style={{ color: 'white' }}></VolumeOffIcon>\r\n  );\r\n\r\n  const musicIcon = props.isMusic ? (\r\n    <SubscriptionsIcon style={{ color: 'white' }}></SubscriptionsIcon>\r\n  ) : (\r\n    <YouTubeIcon style={{ color: 'white' }}></YouTubeIcon>\r\n  );\r\n\r\n  return (\r\n    <div className={classes.controls__wrapper}>\r\n      <div className={classes.controls__score}>Score: {props.score}</div>\r\n      <Button variant=\"contained\" color=\"primary\" onClick={props.clicked}>\r\n        Start Game\r\n      </Button>\r\n      <Button variant=\"contained\" color=\"primary\" onClick={props.volumeToggle}>\r\n        {volumeIcon}\r\n      </Button>\r\n      {props.isFull ? null : (\r\n        <Button variant=\"contained\" color=\"primary\" onClick={props.musicToggle}>\r\n          {musicIcon}\r\n        </Button>\r\n      )}\r\n\r\n      <Button variant=\"contained\" color=\"primary\" onClick={props.goFull}>\r\n        <FullscreenIcon />\r\n      </Button>\r\n\r\n      {props.isFull ? null : <Popup />}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Controls;\r\n","export default __webpack_public_path__ + \"static/media/bite.1e6ccb0d.mp3\";","import React from 'react';\r\nimport classes from './MusicPlayer.module.css';\r\n\r\nconst MusicPlayer = (props) => {\r\n  return (\r\n    <div\r\n      className={classes.music}\r\n      style={props.isMusic ? { display: 'block' } : { display: 'none' }}\r\n    >\r\n      <iframe\r\n        title=\"music\"\r\n        width=\"100%\"\r\n        height=\"100%\"\r\n        src=\"https://www.youtube.com/embed/DIi-pBpXIbE\"\r\n        frameBorder=\"0\"\r\n        allow=\"accelerometer; autoplay;\"\r\n        allowFullScreen\r\n        className={classes.music__player}\r\n      ></iframe>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MusicPlayer;\r\n","export default __webpack_public_path__ + \"static/media/rs_school_js.d7e49236.svg\";","import React from 'react';\r\nimport classes from './Footer.module.css';\r\nimport logo from '../../assets/rs_school_js.svg';\r\n\r\nconst Footer = () => (\r\n  <div className={classes.footer}>\r\n    <a className={classes.footer__link} href=\"https://github.com/Rrroman\">\r\n      Created by Roman 2021\r\n    </a>\r\n    <a className={classes.footer__link} href=\"https://rs.school/js/\">\r\n      <img className={classes.footer__logo} src={logo} alt=\"Rs School\" />\r\n    </a>\r\n  </div>\r\n);\r\n\r\nexport default Footer;\r\n","import React, { Component } from 'react';\r\nimport Fullscreen from 'react-full-screen';\r\nimport classes from './App.module.css';\r\nimport Snake from '../components/Snake/Snake';\r\nimport Fruit from '../components/Fruit/Fruit';\r\nimport constants from '../constants/constants';\r\nimport Controls from '../components/Controls/Controls';\r\nimport biteSound from '../assets/bite.mp3';\r\nimport MusicPlayer from '../components/MusicPlayer/MusicPlayer';\r\nimport Footer from '../components/Footer/Footer';\r\nimport Context from '../context/Context';\r\n\r\nclass App extends Component {\r\n  state = {\r\n    snakePosition: constants.STARTING_SNAKE_POSITION,\r\n    direction: constants.RIGHT,\r\n    speed: constants.SPEED,\r\n    fruitPosition: constants.FRUIT_POSITION(),\r\n    isGameOver: false,\r\n    isGamePause: true,\r\n    score: 0,\r\n    bestScore: 0,\r\n    lastScores: [],\r\n    isVolume: true,\r\n    isMusic: false,\r\n    isFull: false,\r\n    audioVolume: 100,\r\n  };\r\n\r\n  audio = new Audio(biteSound);\r\n\r\n  goFull = (event) => {\r\n    this.setState((prevState) => {\r\n      return {\r\n        isFull: !prevState.isFull,\r\n      };\r\n    });\r\n\r\n    event.target.blur();\r\n  };\r\n\r\n  componentDidMount() {\r\n    window.addEventListener('keydown', this.keydownHandler.bind(this));\r\n\r\n    const isBestScore = localStorage.getItem('bestScore') > 0;\r\n    const updateScore = isBestScore ? localStorage.getItem('bestScore') : 0;\r\n\r\n    const isSavedVolume = localStorage.getItem('audioVolume');\r\n    const updateVolume = isSavedVolume\r\n      ? localStorage.getItem('audioVolume')\r\n      : this.state.audioVolume;\r\n\r\n    const isLastScores = JSON.parse(localStorage.getItem('lastScores'));\r\n    const updateLastScores = isLastScores\r\n      ? JSON.parse(localStorage.getItem('lastScores'))\r\n      : this.state.lastScores;\r\n\r\n    this.setState({\r\n      bestScore: updateScore,\r\n      audioVolume: updateVolume,\r\n      lastScores: updateLastScores,\r\n    });\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    this.checkWallSmash();\r\n    this.checkSnakeBiteItSelf();\r\n    this.checkEatFruit();\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    // fix Warning: Can't perform a React state update on an unmounted component\r\n    this.setState = (state, callback) => {\r\n      return;\r\n    };\r\n  }\r\n\r\n  keydownHandler(event) {\r\n    switch (event.keyCode) {\r\n      case 37:\r\n      case 65:\r\n        if (\r\n          this.state.direction !== constants.RIGHT &&\r\n          !this.state.isGamePause &&\r\n          !this.state.isGameOver\r\n        ) {\r\n          this.setDirection(constants.LEFT);\r\n          this.moveSnake();\r\n        }\r\n        break;\r\n      case 38:\r\n      case 87:\r\n        if (\r\n          this.state.direction !== constants.BOTTOM &&\r\n          !this.state.isGamePause &&\r\n          !this.state.isGameOver\r\n        ) {\r\n          this.setState({ direction: constants.TOP });\r\n          this.moveSnake();\r\n        }\r\n        break;\r\n      case 39:\r\n      case 68:\r\n        if (\r\n          this.state.direction !== constants.LEFT &&\r\n          !this.state.isGamePause &&\r\n          !this.state.isGameOver\r\n        ) {\r\n          this.setState({ direction: constants.RIGHT });\r\n          this.moveSnake();\r\n        }\r\n        break;\r\n      case 40:\r\n      case 83:\r\n        if (\r\n          this.state.direction !== constants.TOP &&\r\n          !this.state.isGamePause &&\r\n          !this.state.isGameOver\r\n        ) {\r\n          this.setState({ direction: constants.BOTTOM });\r\n          this.moveSnake();\r\n        }\r\n        break;\r\n      case 32:\r\n        this.setState((prevState) => {\r\n          return {\r\n            isGamePause: !prevState.isGamePause,\r\n          };\r\n        });\r\n        this.isGamePauseToggle();\r\n        break;\r\n      default:\r\n    }\r\n  }\r\n\r\n  setDirection(direction) {\r\n    this.setState({ direction: direction });\r\n  }\r\n\r\n  moveSnake = () => {\r\n    if (this.state.isGameOver) {\r\n      clearInterval(this.state.intervalId);\r\n      const newIntervalId = setInterval(this.moveSnake, this.state.speed);\r\n\r\n      this.setState({\r\n        intervalId: newIntervalId,\r\n        isGameOver: false,\r\n        speed: constants.SPEED,\r\n      });\r\n    }\r\n\r\n    const snakeCoordinates = [...this.state.snakePosition];\r\n    let headCoordinates = snakeCoordinates[snakeCoordinates.length - 1];\r\n\r\n    switch (this.state.direction) {\r\n      case constants.LEFT:\r\n        headCoordinates = [\r\n          headCoordinates[0] - constants.SPACE_BETWEEN_SNAKE_PIECES,\r\n          headCoordinates[1],\r\n        ];\r\n        break;\r\n      case constants.TOP:\r\n        headCoordinates = [\r\n          headCoordinates[0],\r\n          headCoordinates[1] - constants.SPACE_BETWEEN_SNAKE_PIECES,\r\n        ];\r\n        break;\r\n      case constants.RIGHT:\r\n        headCoordinates = [\r\n          headCoordinates[0] + constants.SPACE_BETWEEN_SNAKE_PIECES,\r\n          headCoordinates[1],\r\n        ];\r\n        break;\r\n      case constants.BOTTOM:\r\n        headCoordinates = [\r\n          headCoordinates[0],\r\n          headCoordinates[1] + constants.SPACE_BETWEEN_SNAKE_PIECES,\r\n        ];\r\n        break;\r\n      default:\r\n    }\r\n\r\n    snakeCoordinates.push(headCoordinates);\r\n    snakeCoordinates.shift();\r\n\r\n    this.setState({\r\n      snakePosition: snakeCoordinates,\r\n    });\r\n  };\r\n\r\n  checkWallSmash = () => {\r\n    const headCoordinates = this.state.snakePosition[\r\n      this.state.snakePosition.length - 1\r\n    ];\r\n\r\n    if (\r\n      headCoordinates[0] < 0 ||\r\n      headCoordinates[0] >= constants.MAX_POSITION ||\r\n      headCoordinates[1] < 0 ||\r\n      headCoordinates[1] >= constants.MAX_POSITION\r\n    ) {\r\n      this.isGameOver();\r\n    }\r\n  };\r\n\r\n  checkSnakeBiteItSelf = () => {\r\n    const snakeCoordinates = [...this.state.snakePosition];\r\n    const headCoordinates = snakeCoordinates[snakeCoordinates.length - 1];\r\n\r\n    snakeCoordinates.pop();\r\n\r\n    snakeCoordinates.forEach((snakePieces) => {\r\n      if (\r\n        headCoordinates[0] === snakePieces[0] &&\r\n        headCoordinates[1] === snakePieces[1]\r\n      ) {\r\n        this.isGameOver();\r\n      }\r\n    });\r\n  };\r\n\r\n  checkEatFruit = () => {\r\n    const headCoordinates = this.state.snakePosition[\r\n      this.state.snakePosition.length - 1\r\n    ];\r\n    const fruitCoordinates = this.state.fruitPosition;\r\n\r\n    if (\r\n      headCoordinates[0] === fruitCoordinates[0] &&\r\n      headCoordinates[1] === fruitCoordinates[1]\r\n    ) {\r\n      this.setState((prevState) => {\r\n        if (prevState.speed > constants.SPEED_FAST) {\r\n          return {\r\n            fruitPosition: constants.FRUIT_POSITION(),\r\n            speed: prevState.speed - constants.SPEED_STEP,\r\n            score: this.state.snakePosition.length * constants.SPEED_STEP,\r\n          };\r\n        } else {\r\n          return {\r\n            fruitPosition: constants.FRUIT_POSITION(),\r\n            speed: prevState.speed - 1,\r\n            score: prevState.snakePosition.length * constants.SPEED_STEP,\r\n          };\r\n        }\r\n      });\r\n\r\n      clearInterval(this.state.intervalId);\r\n\r\n      const intervalId = setInterval(this.moveSnake, this.state.speed);\r\n      this.setState({ intervalId: intervalId });\r\n\r\n      this.snakeGrow();\r\n\r\n      if (this.state.isVolume) {\r\n        this.audio.currentTime = 0;\r\n        this.audio.volume = this.state.audioVolume / 100;\r\n        this.audio.play();\r\n      }\r\n    }\r\n  };\r\n\r\n  snakeGrow = () => {\r\n    const snakeCoordinates = [...this.state.snakePosition];\r\n\r\n    snakeCoordinates.unshift([]);\r\n\r\n    this.setState({\r\n      snakePosition: snakeCoordinates,\r\n    });\r\n  };\r\n\r\n  isGamePauseToggle = () => {\r\n    if (this.state.isGamePause) {\r\n      clearInterval(this.state.intervalId);\r\n      this.setState({\r\n        isGamePause: true,\r\n      });\r\n    } else if (!this.state.isGamePause) {\r\n      const newIntervalId = setInterval(this.moveSnake, this.state.speed);\r\n\r\n      this.setState({\r\n        intervalId: newIntervalId,\r\n        isGamePause: false,\r\n      });\r\n    }\r\n  };\r\n\r\n  isGameOver = () => {\r\n    const lastScoresCopy = [...this.state.lastScores];\r\n    if (lastScoresCopy.length >= 10) {\r\n      lastScoresCopy.push(this.state.score);\r\n      lastScoresCopy.shift();\r\n    } else {\r\n      lastScoresCopy.push(this.state.score);\r\n    }\r\n\r\n    this.setState({\r\n      snakePosition: constants.STARTING_SNAKE_POSITION,\r\n      direction: constants.RIGHT,\r\n      speed: constants.SPEED,\r\n      isGameOver: true,\r\n      lastScores: lastScoresCopy,\r\n    });\r\n\r\n    if (this.state.score > this.state.bestScore) {\r\n      localStorage.setItem('bestScore', this.state.score);\r\n      this.setState((prevState) => {\r\n        return {\r\n          bestScore: prevState.score,\r\n        };\r\n      });\r\n    }\r\n\r\n    localStorage.setItem('lastScores', JSON.stringify(lastScoresCopy));\r\n    clearInterval(this.state.intervalId);\r\n  };\r\n\r\n  startGameHandler = (event) => {\r\n    if (this.state.isGameOver || this.state.isGamePause) {\r\n      const intervalId = setInterval(this.moveSnake, this.state.speed);\r\n      this.setState({\r\n        intervalId: intervalId,\r\n        isGameOver: false,\r\n        isGamePause: false,\r\n        score: 0,\r\n      });\r\n    }\r\n\r\n    event.target.blur();\r\n  };\r\n\r\n  volumeToggleHandler = (event) => {\r\n    this.setState((prevState) => {\r\n      return {\r\n        isVolume: !prevState.isVolume,\r\n      };\r\n    });\r\n\r\n    event.target.blur();\r\n  };\r\n\r\n  audioVolumeHandler = (newVolume) => {\r\n    this.setState({\r\n      audioVolume: newVolume,\r\n    });\r\n\r\n    localStorage.setItem('audioVolume', this.state.audioVolume);\r\n  };\r\n\r\n  musicToggleHandler = (event) => {\r\n    this.setState((prevState) => {\r\n      return {\r\n        isMusic: !prevState.isMusic,\r\n      };\r\n    });\r\n\r\n    event.target.blur();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className={classes.app}>\r\n        <Fullscreen\r\n          enabled={this.state.isFull}\r\n          onChange={(isFull) => this.setState({ isFull })}\r\n        >\r\n          <Context.Provider\r\n            value={{\r\n              bestScore: this.state.bestScore,\r\n              audioVolumeHandler: this.audioVolumeHandler,\r\n              audioVolume: this.state.audioVolume,\r\n              lastScores: this.state.lastScores,\r\n            }}\r\n          >\r\n            <Controls\r\n              clicked={this.startGameHandler.bind(this)}\r\n              score={this.state.score}\r\n              isVolume={this.state.isVolume}\r\n              isMusic={this.state.isMusic}\r\n              volumeToggle={this.volumeToggleHandler}\r\n              musicToggle={this.musicToggleHandler}\r\n              goFull={this.goFull.bind(this)}\r\n              isFull={this.state.isFull}\r\n            />\r\n          </Context.Provider>\r\n\r\n          <div>\r\n            <div\r\n              className={`${classes.app__field} ${\r\n                this.state.isFull ? classes.app__fullScreen : null\r\n              }`}\r\n            >\r\n              <Snake\r\n                snakePosition={this.state.snakePosition}\r\n                direction={this.state.direction}\r\n                isGameOver={this.state.isGameOver}\r\n                size={constants.SIZE}\r\n              />\r\n              <Fruit\r\n                fruitPosition={this.state.fruitPosition}\r\n                size={constants.SIZE}\r\n              />\r\n            </div>\r\n          </div>\r\n        </Fullscreen>\r\n\r\n        <MusicPlayer isMusic={this.state.isMusic} />\r\n\r\n        <Footer />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './containers/App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}